import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'

//test autContext 2
import { useEffect, useState } from 'react';
import { useRouter } from 'next/router';
import { useAuth } from '../context/AuthUserContext';
import Header from '../components/Header';
import CreateArea from '../components/CreateArea';
import Note from '../components/Note';
import { collection, addDoc, getDocs } from "firebase/firestore";
import { db } from '../firebase.config';



export default function Home(props) {

  //test autContext 2
  const { authUser, loading, } = useAuth();
  const router = useRouter();


  // Listen for changes on loading and authUser, redirect if needed
  useEffect(() => {
    if (!loading && !authUser)
      router.push('/login')
  }, [authUser, loading])

  // /show userData
  console.log(authUser)


  const [notes, setNotes] = useState([])
  // Save Notes function
  function addNote(newNote) {
    setNotes(prevValue => {
      // console.log("note", prevValue)
      return [...prevValue, newNote]
    })

  }

  const { addANewPost, getNotes } = useAuth();
  const [noteList, setNoteList] = useState([]);

  const fetchPost = async () => {

    await getDocs(collection(db, "notes"))
      .then((querySnapshot) => {
        const newData = querySnapshot.docs
          .map((doc) => ({ ...doc.data(), id: doc.id }));
        setNoteList(newData);
        console.log("todos", newData);
      })

  }

  useEffect(() => {
    fetchPost();
  }, [])





  return (
    <div className={styles.container}>
      <Head>
        <title>Home Page</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Header />
      <main
      //  className={styles.main}
      >
         <CreateArea onAdd={addNote} fetchPost={fetchPost}/> 


        {
          noteList?.map((note, i) => (
       
            <Note
              key={i}
              id={i}
              title={note.title}
              content={note.content}
            />
          ))

        } 


      </main>


    </div>
  )
}

// Home.Auth = WithPrivateRoute