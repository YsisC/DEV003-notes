// Firebase
import { db } from '@/src/firebase.config'
import { doc, getDoc, updateDoc } from 'firebase/firestore'
//Hooks
import React, { useEffect, useState } from 'react'
import { useAuth } from '@/src/context/AuthUserContext';
// CSS
import styles from '../../styles/Home.module.css'
// React Icons
import { MdDelete } from "react-icons/md";
//Components
import Note from '@/src/components/Note';
import { useRouter } from 'next/router';
import RootLayout from '@/src/layouts/RootLayout';
import Modal from '@/src/components/Modal';
import Head from 'next/head';

export default function NoteId({ notes }) {
  const [showModal, setShowModal] = useState(true)
  //Show Modal
  const openModal = () => {
    setShowModal(true)
  }
  // const router = useRouter()
  const router = useRouter()
  const [edit, setEdit] = useState(false);
  const [note, setNote] = useState([]);
  const [title, setTitle] = useState(''); // Declare a state variable...
  // const { authUser } = useAuth()
  const { deleteNote, } = useAuth();

  useEffect(() => {
    setNote(JSON.parse(notes))
  }, [notes])


  const onChange = (e) => {
    // setEdit(true)
    // if (edit) {
    const { value, name } = e.target;
    setNote(prevState => ({
      ...prevState,
      [name]: value,

    }))
    // }

  }
  // console.log(JSON.parse(notes))
  JSON.parse(notes)

  const onSubmit = async (e) => {
    const { id } = router.query
   
    const docRef = doc(db, 'reminders', id);
    await updateDoc(docRef, { ...note, date: new Date() });
    // await router.push(`/notes/${content}`)
    await router.push(`/home`)

    console.log(content);
  }

  const deleteNoteId = async () => {
    console.log(note.id)
    deleteNote(note.id)
    await router.push(`/home`)
    // openModal()
  }
  console.log(note)
  return (
    <>
      <Head>
        <title>Lab Note</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="https://raw.githubusercontent.com/YsisC/DEV003-notes/main/public/assets/logo.svg" />
      </Head>
      <RootLayout>

      </RootLayout>

      <div className='fixed inset-0 bg-black bg-opacity-25 backdrop-blur-sm flex justify-center items-center  z-[10]'>
        <div className='w-80 md:w-[32rem] flex flex-col '>
         

          <div key={note.id} className={styles.note_modal}>
          <div  className={styles.note_header} >
                <input className="b"
                  type="text"
                  name="title"
                  value={note.title}
                  onChange={onChange}
                />
                 <button className=' text-xl z-[11]'  onClick={onSubmit}>X</button>
              </div>
           
            <div className={styles.note_main}>
            
              <textarea
                name="content"
                className="b"
                type="text"
                value={note.content}
                onChange={onChange}
              />
              {/* <p className='self-end'>Ultima modificacion: {new Date(note.date).toDateString()}</p> */}
              <p className='flex mb-2 justify-end'>Ultima modificacion: {note.date}</p>
            </div>
            <div className={styles.note_footer}>
              <button>
                <MdDelete size={30}
                  onClick={deleteNoteId}
                />

              </button>
              <button onClick={onSubmit}>POST</button>
            </div>
          </div>
        </div>
      </div>

    </>

  )
}

export async function getServerSideProps({ query: { id} }) {
  const docRef = doc(db, 'reminders', id)
  const docSnap = await getDoc(docRef)

  const notes = { ...docSnap.data(), id: docSnap.id, date: docSnap.data().date.toDate().toDateString() }

  return {
    props: {
      notes: JSON.stringify(notes) || []
    }
  }
}